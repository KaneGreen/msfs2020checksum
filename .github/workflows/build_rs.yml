name: build

on:
  release:
    types: [published]

defaults:
  run:
    shell: pwsh

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  build:
    runs-on: windows-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'master'

      - name: Update Rustc
        run: |
          rustup self update
          rustup default stable-x86_64-pc-windows-msvc
          rustup update

      - name: Build
        timeout-minutes: 120
        run: |
          rustup default stable-x86_64-pc-windows-msvc
          cargo rustc --release -- -C target-feature=+avx2
          cd target
          mkdir upload
          cp release/msfs2020checksum.exe upload/

      - name: Hashing
        run: |
          $MYEXEHASH=(Get-FileHash target/upload/msfs2020checksum.exe).Hash
          echo "MYEXEHASH=$MYEXEHASH" >> $env:GITHUB_ENV

      - name: Upload Binaries to Release
        uses: svenstaro/upload-release-action@v2
        with:
          # A personal access token for the GitHub repository in which the release will be created and edited.
          # It is recommended to create the access token with the following scopes: `repo, user, admin:repo_hook`.
          repo_token: ${{ secrets.MY_PERSONAL_ACCESS_TOKEN }}
          file: target/upload/*
          file_glob: true
          tag: ${{ github.ref }}
          body: |
            "SHA256: ${{ github.MYEXEHASH }}"
